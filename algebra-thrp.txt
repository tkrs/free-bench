# JMH version: 1.32
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /home/tkrs/.asdf/installs/java/openjdk-17.0.2/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:+AlwaysPreTouch
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: algebras.Benches9.eff_algebra

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 2
# Preparing profilers: AsyncProfiler 
# Warmup Iteration   1: 5950.093 ops/s
# Warmup Iteration   2: 18035.119 ops/s
# Warmup Iteration   3: 19266.480 ops/s
# Warmup Iteration   4: 19050.168 ops/s
# Warmup Iteration   5: 19202.186 ops/s
Iteration   1: 18314.149 ops/s
Iteration   2: 17927.835 ops/s
Iteration   3: 19608.620 ops/s
Iteration   4: 18838.524 ops/s
Iteration   5: 19788.311 ops/s
Iteration   6: 20094.847 ops/s
Iteration   7: 19949.861 ops/s
Iteration   8: 19583.560 ops/s
Iteration   9: 18980.521 ops/s
Iteration  10: 16161.794 ops/s
                 ·async: (text only)

# Processing profiler results: AsyncProfiler 

# Run progress: 16.67% complete, ETA 00:01:26
# Fork: 2 of 2
# Preparing profilers: AsyncProfiler 
# Warmup Iteration   1: 6923.126 ops/s
# Warmup Iteration   2: 19233.906 ops/s
# Warmup Iteration   3: 18346.189 ops/s
# Warmup Iteration   4: 18356.759 ops/s
# Warmup Iteration   5: 17795.920 ops/s
Iteration   1: 17852.148 ops/s
Iteration   2: 18802.970 ops/s
Iteration   3: 17581.591 ops/s
Iteration   4: 17572.686 ops/s
Iteration   5: 16530.716 ops/s
Iteration   6: 19625.426 ops/s
Iteration   7: 19595.250 ops/s
Iteration   8: 19981.094 ops/s
Iteration   9: 17493.515 ops/s
Iteration  10: 17448.053 ops/s
                 ·async: (text only)

# Processing profiler results: AsyncProfiler 


Result "algebras.Benches9.eff_algebra":
  18586.574 ±(99.9%) 1046.694 ops/s [Average]
  (min, avg, max) = (16161.794, 18586.574, 20094.847), stdev = 1205.374
  CI (99.9%): [17539.880, 19633.267] (assumes normal distribution)

Secondary result "algebras.Benches9.eff_algebra:·async":
Async profiler results:
  /home/tkrs/code/github.com/tkrs/free-bench/algebras.Benches9.eff_algebra-Throughput/flame-cpu-forward.svg
  /home/tkrs/code/github.com/tkrs/free-bench/algebras.Benches9.eff_algebra-Throughput/flame-cpu-reverse.svg
Async profiler results:
  /home/tkrs/code/github.com/tkrs/free-bench/algebras.Benches9.eff_algebra-Throughput/flame-cpu-forward.svg
  /home/tkrs/code/github.com/tkrs/free-bench/algebras.Benches9.eff_algebra-Throughput/flame-cpu-reverse.svg


# JMH version: 1.32
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /home/tkrs/.asdf/installs/java/openjdk-17.0.2/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:+AlwaysPreTouch
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: algebras.Benches9.eitherk_algebra

# Run progress: 33.33% complete, ETA 00:01:08
# Fork: 1 of 2
# Preparing profilers: AsyncProfiler 
# Warmup Iteration   1: 234836.712 ops/s
# Warmup Iteration   2: 347446.860 ops/s
# Warmup Iteration   3: 319277.273 ops/s
# Warmup Iteration   4: 369016.864 ops/s
# Warmup Iteration   5: 360004.278 ops/s
Iteration   1: 341795.097 ops/s
Iteration   2: 347897.332 ops/s
Iteration   3: 330307.091 ops/s
Iteration   4: 361326.378 ops/s
Iteration   5: 371286.834 ops/s
Iteration   6: 348589.801 ops/s
Iteration   7: 341445.801 ops/s
Iteration   8: 309604.189 ops/s
Iteration   9: 347030.127 ops/s
Iteration  10: 332853.396 ops/s
                 ·async: (text only)

# Processing profiler results: AsyncProfiler 

# Run progress: 50.00% complete, ETA 00:00:51
# Fork: 2 of 2
# Preparing profilers: AsyncProfiler 
# Warmup Iteration   1: 227450.601 ops/s
# Warmup Iteration   2: 362336.994 ops/s
# Warmup Iteration   3: 350678.395 ops/s
# Warmup Iteration   4: 359569.423 ops/s
# Warmup Iteration   5: 322249.311 ops/s
Iteration   1: 317439.923 ops/s
Iteration   2: 358631.075 ops/s
Iteration   3: 322316.409 ops/s
Iteration   4: 343201.089 ops/s
Iteration   5: 349609.292 ops/s
Iteration   6: 366919.291 ops/s
Iteration   7: 356809.897 ops/s
Iteration   8: 376387.408 ops/s
Iteration   9: 353117.575 ops/s
Iteration  10: 324005.460 ops/s
                 ·async: (text only)

# Processing profiler results: AsyncProfiler 


Result "algebras.Benches9.eitherk_algebra":
  345028.673 ±(99.9%) 15709.272 ops/s [Average]
  (min, avg, max) = (309604.189, 345028.673, 376387.408), stdev = 18090.821
  CI (99.9%): [329319.401, 360737.945] (assumes normal distribution)

Secondary result "algebras.Benches9.eitherk_algebra:·async":
Async profiler results:
  /home/tkrs/code/github.com/tkrs/free-bench/algebras.Benches9.eitherk_algebra-Throughput/flame-cpu-forward.svg
  /home/tkrs/code/github.com/tkrs/free-bench/algebras.Benches9.eitherk_algebra-Throughput/flame-cpu-reverse.svg
Async profiler results:
  /home/tkrs/code/github.com/tkrs/free-bench/algebras.Benches9.eitherk_algebra-Throughput/flame-cpu-forward.svg
  /home/tkrs/code/github.com/tkrs/free-bench/algebras.Benches9.eitherk_algebra-Throughput/flame-cpu-reverse.svg


# JMH version: 1.32
# VM version: JDK 17.0.2, OpenJDK 64-Bit Server VM, 17.0.2+8-86
# VM invoker: /home/tkrs/.asdf/installs/java/openjdk-17.0.2/bin/java
# VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -XX:+AlwaysPreTouch
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: algebras.Benches9.reader

# Run progress: 66.67% complete, ETA 00:00:34
# Fork: 1 of 2
# Preparing profilers: AsyncProfiler 
# Warmup Iteration   1: 1981181.924 ops/s
# Warmup Iteration   2: 2490700.192 ops/s
# Warmup Iteration   3: 2290441.721 ops/s
# Warmup Iteration   4: 2422591.316 ops/s
# Warmup Iteration   5: 2231884.084 ops/s
Iteration   1: 2398104.415 ops/s
Iteration   2: 2476280.160 ops/s
Iteration   3: 2441965.408 ops/s
Iteration   4: 2175821.322 ops/s
Iteration   5: 2286473.141 ops/s
Iteration   6: 2551773.452 ops/s
Iteration   7: 2561070.855 ops/s
Iteration   8: 2334781.818 ops/s
Iteration   9: 2414252.452 ops/s
Iteration  10: 2361987.380 ops/s
                 ·async: (text only)

# Processing profiler results: AsyncProfiler 

# Run progress: 83.33% complete, ETA 00:00:17
# Fork: 2 of 2
# Preparing profilers: AsyncProfiler 
# Warmup Iteration   1: 1962548.947 ops/s
# Warmup Iteration   2: 1880464.113 ops/s
# Warmup Iteration   3: 2218629.313 ops/s
# Warmup Iteration   4: 2390498.108 ops/s
# Warmup Iteration   5: 2416173.537 ops/s
Iteration   1: 2361821.518 ops/s
Iteration   2: 2132661.990 ops/s
Iteration   3: 2411044.937 ops/s
Iteration   4: 2391557.991 ops/s
Iteration   5: 2392858.741 ops/s
Iteration   6: 2198202.742 ops/s
Iteration   7: 2119721.625 ops/s
Iteration   8: 2264653.537 ops/s
Iteration   9: 2559624.079 ops/s
Iteration  10: 2478512.959 ops/s
                 ·async: (text only)

# Processing profiler results: AsyncProfiler 


Result "algebras.Benches9.reader":
  2365658.526 ±(99.9%) 116915.995 ops/s [Average]
  (min, avg, max) = (2119721.625, 2365658.526, 2561070.855), stdev = 134640.634
  CI (99.9%): [2248742.531, 2482574.522] (assumes normal distribution)

Secondary result "algebras.Benches9.reader:·async":
Async profiler results:
  /home/tkrs/code/github.com/tkrs/free-bench/algebras.Benches9.reader-Throughput/flame-cpu-forward.svg
  /home/tkrs/code/github.com/tkrs/free-bench/algebras.Benches9.reader-Throughput/flame-cpu-reverse.svg
Async profiler results:
  /home/tkrs/code/github.com/tkrs/free-bench/algebras.Benches9.reader-Throughput/flame-cpu-forward.svg
  /home/tkrs/code/github.com/tkrs/free-bench/algebras.Benches9.reader-Throughput/flame-cpu-reverse.svg


# Run complete. Total time: 00:01:42

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                         Mode  Cnt        Score        Error  Units
Benches9.eff_algebra             thrpt   20    18586.574 ±   1046.694  ops/s
Benches9.eff_algebra:·async      thrpt               NaN                 ---
Benches9.eitherk_algebra         thrpt   20   345028.673 ±  15709.272  ops/s
Benches9.eitherk_algebra:·async  thrpt               NaN                 ---
Benches9.reader                  thrpt   20  2365658.526 ± 116915.995  ops/s
Benches9.reader:·async           thrpt               NaN                 ---

Benchmark result is saved to algebra-flamegraph-thrp.json
